// <auto-generated />
using GameStatsServer.DataProviders;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GameStatsServer.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20180524165514_AddServersAndMatches")]
    partial class AddServersAndMatches
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameStatsServer.Entities.Match", b =>
                {
                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("FragLimit");

                    b.Property<string>("GameMode");

                    b.Property<string>("Map");

                    b.Property<string>("ServerEndpoint");

                    b.Property<double>("TimeElapsed");

                    b.Property<int>("TimeLimit");

                    b.HasKey("Timestamp");

                    b.HasIndex("ServerEndpoint");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("GameStatsServer.Entities.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Deaths");

                    b.Property<int>("Frags");

                    b.Property<int>("Kills");

                    b.Property<DateTime?>("MatchTimestamp");

                    b.Property<string>("PlayerName");

                    b.HasKey("Id");

                    b.HasIndex("MatchTimestamp");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("GameStatsServer.Entities.Server", b =>
                {
                    b.Property<string>("Endpoint")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GameModes");

                    b.Property<string>("Name");

                    b.HasKey("Endpoint");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("GameStatsServer.Entities.Match", b =>
                {
                    b.HasOne("GameStatsServer.Entities.Server", "Server")
                        .WithMany("Mathes")
                        .HasForeignKey("ServerEndpoint");
                });

            modelBuilder.Entity("GameStatsServer.Entities.Score", b =>
                {
                    b.HasOne("GameStatsServer.Entities.Match", "Match")
                        .WithMany("Scores")
                        .HasForeignKey("MatchTimestamp");
                });
#pragma warning restore 612, 618
        }
    }
}
